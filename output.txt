Tokens:
[FUNCTION,MAIN,OPENPAREN,CLOSEPAREN,OPENBRACE,IMMUTABLE,ID "price",COLON,INT,ASSIGN,OPENPAREN,NUM 150,PLUS,NUM 20,MULTIPLY,NUM 12,CLOSEPAREN,SEMICOLON,VARIABLE,ID "quantity",COLON,INT,ASSIGN,NUM 10,SEMICOLON,VARIABLE,ID "discount",COLON,DOUBLE,ASSIGN,REAL 0.0,SEMICOLON,PRINT,OPENPAREN,ID "price",CLOSEPAREN,SEMICOLON,PRINT,OPENPAREN,ID "quantity",CLOSEPAREN,SEMICOLON,PRINT,OPENPAREN,ID "discount",CLOSEPAREN,SEMICOLON,ID "discount",ASSIGN,OPENPAREN,ID "price",MULTIPLY,ID "quantity",CLOSEPAREN,MULTIPLY,REAL 0.1,SEMICOLON,PRINT,OPENPAREN,ID "discount",CLOSEPAREN,SEMICOLON,VARIABLE,ID "attempts",COLON,INT,ASSIGN,NUM 3,SEMICOLON,WHILE,OPENPAREN,ID "attempts",GREATER,NUM 0,CLOSEPAREN,OPENBRACE,PRINT,OPENPAREN,PHRASE "Attempts remaining: ",CLOSEPAREN,SEMICOLON,PRINT,OPENPAREN,ID "attempts",CLOSEPAREN,SEMICOLON,ID "attempts",ASSIGN,ID "attempts",MINUS,NUM 1,SEMICOLON,CLOSEBRACE,IMMUTABLE,ID "isAvailable",COLON,BOOLEAN,ASSIGN,TRUE,SEMICOLON,IMMUTABLE,ID "isExpired",COLON,BOOLEAN,ASSIGN,FALSE,SEMICOLON,IF,OPENPAREN,ID "isExpired",CLOSEPAREN,OPENBRACE,PRINT,OPENPAREN,PHRASE "Expired",CLOSEPAREN,SEMICOLON,CLOSEBRACE,IF,OPENPAREN,ID "quantity",GREATEROREQUAL,NUM 10,CLOSEPAREN,OPENBRACE,PRINT,OPENPAREN,PHRASE "Enough quantity available",CLOSEPAREN,SEMICOLON,CLOSEBRACE,ELSE,OPENBRACE,PRINT,OPENPAREN,PHRASE "Insufficient quantity",CLOSEPAREN,SEMICOLON,CLOSEBRACE,VARIABLE,ID "count",COLON,INT,ASSIGN,NUM 5,SEMICOLON,ID "count",INCREMENT,SEMICOLON,ID "count",SELFDIVIDE,NUM 2,SEMICOLON,IMMUTABLE,ID "p",COLON,BOOLEAN,ASSIGN,TRUE,SEMICOLON,IMMUTABLE,ID "q",COLON,BOOLEAN,ASSIGN,FALSE,SEMICOLON,IF,OPENPAREN,ID "p",AND,ID "q",OR,ID "p",CLOSEPAREN,OPENBRACE,CLOSEBRACE,IF,OPENPAREN,ID "q",OR,ID "p",AND,ID "p",CLOSEPAREN,OPENBRACE,CLOSEBRACE,IF,OPENPAREN,ID "isAvailable",OR,ID "isExpired",AND,ID "p",OR,ID "q",CLOSEPAREN,OPENBRACE,CLOSEBRACE,IF,OPENPAREN,ID "p",AND,ID "isAvailable",OR,ID "q",AND,ID "isExpired",CLOSEPAREN,OPENBRACE,CLOSEBRACE,CLOSEBRACE]
Tree:
Clauses [ValAttribution "price" IntegerType (Sum (Num 150) (Mult (Num 20) (Num 12))),VarAttribution "quantity" IntegerType (Num 10),VarAttribution "discount" Float64Type (Real 0.0),PrintClause (Id "price"),PrintClause (Id "quantity"),PrintClause (Id "discount"),Assign "discount" (Mult (Mult (Id "price") (Id "quantity")) (Real 0.1)),PrintClause (Id "discount"),VarAttribution "attempts" IntegerType (Num 3),WhileClause (Greater (Id "attempts") (Num 0)) (Clauses [PrintClause (Phrase "Attempts remaining: "),PrintClause (Id "attempts"),Assign "attempts" (Sub (Id "attempts") (Num 1))]),ValAttribution "isAvailable" BoolType (BooleanValue True),ValAttribution "isExpired" BoolType (BooleanValue False),IFClause (Id "isExpired") (Clauses [PrintClause (Phrase "Expired")]),IFEClause (GreaterEquals (Id "quantity") (Num 10)) (Clauses [PrintClause (Phrase "Enough quantity available")]) (Clauses [PrintClause (Phrase "Insufficient quantity")]),VarAttribution "count" IntegerType (Num 5),Assign "count" (Sum (Id "count") (Num 1)),Assign "count" (Div (Id "count") (Num 2)),ValAttribution "p" BoolType (BooleanValue True),ValAttribution "q" BoolType (BooleanValue False),IFClause (Or (And (Id "p") (Id "q")) (Id "p")) (Clauses []),IFClause (Or (Id "q") (And (Id "p") (Id "p"))) (Clauses []),IFClause (Or (Or (Id "isAvailable") (And (Id "isExpired") (Id "p"))) (Id "q")) (Clauses []),IFClause (Or (And (Id "p") (Id "isAvailable")) (And (Id "q") (Id "isExpired"))) (Clauses [])]