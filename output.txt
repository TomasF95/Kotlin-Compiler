Tokens:
[FUNCTION,MAIN,OPENPAREN,CLOSEPAREN,OPENBRACE,IMMUTABLE,ID "calc",COLON,INT,ASSIGN,OPENPAREN,NUM 5,PLUS,NUM 9,MULTIPLY,NUM 7,CLOSEPAREN,SEMICOLON,VARIABLE,ID "life",COLON,INT,ASSIGN,NUM 42,SEMICOLON,VARIABLE,ID "result",COLON,DOUBLE,ASSIGN,REAL 0.0,SEMICOLON,PRINT,OPENPAREN,ID "calc",CLOSEPAREN,SEMICOLON,PRINT,OPENPAREN,ID "life",CLOSEPAREN,SEMICOLON,PRINT,OPENPAREN,ID "result",CLOSEPAREN,SEMICOLON,ID "result",ASSIGN,OPENPAREN,ID "calc",PLUS,ID "life",CLOSEPAREN,DIVIDE,REAL 2.0,SEMICOLON,PRINT,OPENPAREN,ID "result",CLOSEPAREN,SEMICOLON,VARIABLE,ID "counter",COLON,INT,ASSIGN,NUM 3,SEMICOLON,WHILE,OPENPAREN,ID "counter",GREATER,NUM 0,CLOSEPAREN,OPENBRACE,PRINT,OPENPAREN,ID "counter",CLOSEPAREN,SEMICOLON,ID "counter",ASSIGN,ID "counter",MINUS,NUM 1,SEMICOLON,CLOSEBRACE,IMMUTABLE,ID "a",COLON,BOOLEAN,ASSIGN,TRUE,SEMICOLON,IMMUTABLE,ID "b",COLON,BOOLEAN,ASSIGN,FALSE,SEMICOLON,IF,OPENPAREN,NOT,ID "a",CLOSEPAREN,OPENBRACE,PRINT,OPENPAREN,NUM 0,CLOSEPAREN,SEMICOLON,CLOSEBRACE,IF,OPENPAREN,ID "life",GREATER,NUM 40,CLOSEPAREN,OPENBRACE,PRINT,OPENPAREN,PHRASE "Life is greater than 40",CLOSEPAREN,SEMICOLON,CLOSEBRACE,ELSE,OPENBRACE,PRINT,OPENPAREN,PHRASE "Life is not greater than 40",CLOSEPAREN,SEMICOLON,CLOSEBRACE,VARIABLE,ID "x",COLON,INT,ASSIGN,NUM 0,SEMICOLON,ID "x",INCREMENT,SEMICOLON,ID "x",SELFMULTIPLY,NUM 2,SEMICOLON,IMMUTABLE,ID "c",COLON,BOOLEAN,ASSIGN,TRUE,SEMICOLON,IMMUTABLE,ID "d",COLON,BOOLEAN,ASSIGN,FALSE,SEMICOLON,IF,OPENPAREN,ID "c",AND,ID "d",OR,ID "c",CLOSEPAREN,OPENBRACE,CLOSEBRACE,IF,OPENPAREN,ID "c",OR,ID "d",AND,ID "c",CLOSEPAREN,OPENBRACE,CLOSEBRACE,IF,OPENPAREN,ID "a",OR,ID "b",AND,ID "c",OR,ID "d",CLOSEPAREN,OPENBRACE,CLOSEBRACE,IF,OPENPAREN,ID "a",AND,ID "b",OR,ID "c",AND,ID "d",CLOSEPAREN,OPENBRACE,CLOSEBRACE,CLOSEBRACE]
Tree:
Clauses [ValAttribution "calc" IntegerType (Sum (Num 5) (Mult (Num 9) (Num 7))),VarAttribution "life" IntegerType (Num 42),VarAttribution "result" Float64Type (Real 0.0),PrintClause (Id "calc"),PrintClause (Id "life"),PrintClause (Id "result"),Assign "result" (Div (Sum (Id "calc") (Id "life")) (Real 2.0)),PrintClause (Id "result"),VarAttribution "counter" IntegerType (Num 3),WhileClause (Greater (Id "counter") (Num 0)) (Clauses [PrintClause (Id "counter"),Assign "counter" (Sub (Id "counter") (Num 1))]),ValAttribution "a" BoolType (BooleanValue True),ValAttribution "b" BoolType (BooleanValue False),IFClause (Not (Id "a")) (Clauses [PrintClause (Num 0)]),IFEClause (Greater (Id "life") (Num 40)) (Clauses [PrintClause (Phrase "Life is greater than 40")]) (Clauses [PrintClause (Phrase "Life is not greater than 40")]),VarAttribution "x" IntegerType (Num 0),Assign "x" (Sum (Id "x") (Num 1)),Assign "x" (Mult (Id "x") (Num 2)),ValAttribution "c" BoolType (BooleanValue True),ValAttribution "d" BoolType (BooleanValue False),IFClause (Or (And (Id "c") (Id "d")) (Id "c")) (Clauses []),IFClause (Or (Id "c") (And (Id "d") (Id "c"))) (Clauses []),IFClause (Or (Or (Id "a") (And (Id "b") (Id "c"))) (Id "d")) (Clauses []),IFClause (Or (And (Id "a") (Id "b")) (And (Id "c") (Id "d"))) (Clauses [])]